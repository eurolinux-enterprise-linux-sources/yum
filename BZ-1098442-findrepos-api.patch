diff -up yum-3.2.29/yumcommands.py.old yum-3.2.29/yumcommands.py
--- yum-3.2.29/yumcommands.py.old	2014-05-16 09:44:35.000000000 +0200
+++ yum-3.2.29/yumcommands.py	2014-05-16 09:52:32.849858957 +0200
@@ -838,12 +838,9 @@ class RepoListCommand(YumCommand):
             return base.format_number(ret)
 
         def _repo_match(repo, patterns):
-            rid = repo.id.lower()
-            rnm = repo.name.lower()
             for pat in patterns:
-                if fnmatch.fnmatch(rid, pat):
-                    return True
-                if fnmatch.fnmatch(rnm, pat):
+                if repo in base.repos.findRepos(pat, name_match=True,
+                                                ignore_case=True):
                     return True
             return False
 
diff -up yum-3.2.29/yum/repos.py.old yum-3.2.29/yum/repos.py
--- yum-3.2.29/yum/repos.py.old	2014-05-16 09:44:35.000000000 +0200
+++ yum-3.2.29/yum/repos.py	2014-05-16 09:50:21.432688259 +0200
@@ -148,17 +148,28 @@ class RepoStorage:
             raise Errors.RepoError, \
                 'Error getting repository data for %s, repository not found' % (repoid)
 
-    def findRepos(self,pattern):
-        """find all repositories matching fnmatch `pattern`"""
+    def findRepos(self, pattern, name_match=False, ignore_case=False):
+        """ Find all repositories matching fnmatch `pattern` on the repo.id,
+            can also do case insensitive searches and/or search on the name."""
+
+        if pattern in self.repos: # Minor opt. as we do this a lot...
+            return [self.repos[pattern]]
 
         result = []
         
         for item in pattern.split(','):
             item = item.strip()
-            match = re.compile(fnmatch.translate(item)).match
+            if ignore_case:
+                match = re.compile(fnmatch.translate(item), re.I).match
+            else:
+                match = re.compile(fnmatch.translate(item)).match
             for name,repo in self.repos.items():
+                assert name == repo.id
                 if match(name):
                     result.append(repo)
+                elif name_match and match(repo.name):
+                    result.append(repo)
+
         return result
         
     def disableRepo(self, repoid):
